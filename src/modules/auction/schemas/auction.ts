import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document, Types } from 'mongoose';
import { Bid } from './subschemas/bid.schema';

@Schema()
export class Auction extends Document {
  @Prop({
    type: String,
    required: true,
    default: 'some autogenerated id',
  })
  socketAuctionId: string; // not in create dto (autogenerated)

  @Prop({
    type: Types.ObjectId,
    ref: 'User',
    required: true,
  })
  auctionFounder: Types.ObjectId; // not in create dto (taken from jwt (req.user))

  @Prop({
    type: [Types.ObjectId],
    ref: 'Debt',
    required: true,
  })
  debtsForSale: Types.ObjectId[]; // in create dto

  @Prop({
    type: Date,
    required: true,
  })
  auctionEndTime: Date; // in create dto

  @Prop({
    type: [Bid],
    required: true,
    default: [],
  })
  bidHistory: Bid[]; // not in create dto (new bids during auction)

  @Prop({
    type: Number,
    required: true,
    min: 0,
  })
  startingPrice: number; // in create dto

  @Prop({
    type: Number,
    required: false,
    min: 0,
  })
  finalPrice?: number; // not in create dto (calculated at the end)

  @Prop({
    type: Number,
    required: false,
    min: 0,
  })
  buyNowPrice?: number; // in create dto
}

export const AuctionSchema = SchemaFactory.createForClass(Auction);
